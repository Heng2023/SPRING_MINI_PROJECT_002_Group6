plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

ext {
    springCloudVersion = "2023.0.3"
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

allprojects {
    group = 'org.example'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
//        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'io.micrometer:micrometer-tracing-bridge-brave'

        if(project.name == "config-server"){
            dependencies {
                implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
                implementation 'org.springframework.cloud:spring-cloud-config-server'
            }
        }

        if(project.name == "api-gateway"){
            dependencies {
               implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
               implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'
               implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
               implementation 'org.springframework.boot:spring-boot-starter-webflux'
               implementation 'org.springframework.cloud:spring-cloud-starter-config'
            }
        }

        if (project.name.contains('service')) {
            implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//            implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//            implementation 'org.springframework.cloud:spring-cloud-starter-config'
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
            runtimeOnly 'org.postgresql:postgresql'
            implementation 'org.keycloak:keycloak-spring-boot-starter:21.0.1'
            implementation 'org.keycloak:keycloak-admin-client:21.0.1'
            implementation 'org.springframework.boot:spring-boot-starter-security'
            implementation 'org.springframework.security:spring-security-oauth2-resource-server'
            implementation 'org.springframework.security:spring-security-oauth2-jose'
        }

        if (project.name == "eureka-server") {
            implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
            implementation 'org.springframework.cloud:spring -cloud-starter-config'
        }

        if (project.name == "keycloak-admin-client") {
            implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
            implementation 'org.keycloak:keycloak-spring-boot-starter:21.0.1'
            implementation 'org.keycloak:keycloak-admin-client:21.0.1'
            implementation 'org.springframework.cloud:spring-cloud-starter-config'
            implementation 'org.springframework.boot:spring-boot-starter-security'
            implementation 'org.springframework.security:spring-security-oauth2-resource-server'
            implementation 'org.springframework.security:spring-security-oauth2-jose'
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
    }
}